{
  "comments": [
    {
      "key": {
        "uuid": "55756c62_db98a02e",
        "filename": "build.py",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-11-15T02:26:48Z",
      "side": 1,
      "message": "You can use clang_resource_dir(version, arch) and move this inside your loop. Note that you still have to prepend the stage_2_install, but it is a bit more convenient.",
      "revId": "2f79eb21c0dd64131118338d6d06207b0a97a697",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb335b25_44a71e74",
        "filename": "build.py",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2017-11-15T03:40:04Z",
      "side": 1,
      "message": "clang_resource_dir returns lib64/clang/\u003cver\u003e/lib/linux/\u003carch\u003e.\n\nhowever, the asan libs are under lib64/clang/\u003cver\u003e/lib/linux. \n\nSo I gave \u0027\u0027 to arch and keep the statement outside of the loop.",
      "parentUuid": "55756c62_db98a02e",
      "revId": "2f79eb21c0dd64131118338d6d06207b0a97a697",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6396d433_a58856fe",
        "filename": "build.py",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-11-15T09:00:04Z",
      "side": 1,
      "message": "Sounds good. I can refactor this later to make it more clear.",
      "parentUuid": "fb335b25_44a71e74",
      "revId": "2f79eb21c0dd64131118338d6d06207b0a97a697",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22812f6b_e25780bc",
        "filename": "create_map_file.sh",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-11-15T02:26:48Z",
      "side": 1,
      "message": "Is it possible to switch this to use python directly? You can still call nm, and probably replace the awk with something nicer too. This would also let us just import the script and run it as a function from build.py to generate the map file.",
      "revId": "2f79eb21c0dd64131118338d6d06207b0a97a697",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9672054a_24df8e72",
        "filename": "create_map_file.sh",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2017-11-15T03:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22812f6b_e25780bc",
      "revId": "2f79eb21c0dd64131118338d6d06207b0a97a697",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}