{
  "comments": [
    {
      "key": {
        "uuid": "47f349d0_a77bf22e",
        "filename": "build.py",
        "patchSetId": 6
      },
      "lineNbr": 1124,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2019-06-10T22:34:48Z",
      "side": 1,
      "message": "In addition to \u0027compiler-rt\u0027 like I mentioned in the other comment, we should also include clang-tools-extra (for clang-tiday) and openmp (for host-side openmp).",
      "range": {
        "startLine": 1124,
        "startChar": 71,
        "endLine": 1124,
        "endChar": 72
      },
      "revId": "68ef3d3dcce78232f47841a6905d96b6418d3366",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "938ec075_bc409672",
        "filename": "build.py",
        "patchSetId": 6
      },
      "lineNbr": 1124,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2019-06-10T22:44:11Z",
      "side": 1,
      "message": "I guess clang-tools-extra doesn\u0027t need its own entry and I forgot that we don\u0027t build openmp for the host.  So we only need compiler-rt.",
      "parentUuid": "47f349d0_a77bf22e",
      "range": {
        "startLine": 1124,
        "startChar": 71,
        "endLine": 1124,
        "endChar": 72
      },
      "revId": "68ef3d3dcce78232f47841a6905d96b6418d3366",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e53aa809_f30cbba2",
        "filename": "build.py",
        "patchSetId": 6
      },
      "lineNbr": 1143,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2019-06-10T22:44:11Z",
      "side": 1,
      "message": "I think these can now be removed as well.  But can be done in a follow-up CL.",
      "range": {
        "startLine": 1142,
        "startChar": 0,
        "endLine": 1143,
        "endChar": 58
      },
      "revId": "68ef3d3dcce78232f47841a6905d96b6418d3366",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4933a17f_e1652163",
        "filename": "build.py",
        "patchSetId": 6
      },
      "lineNbr": 1143,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2019-06-11T17:58:20Z",
      "side": 1,
      "message": "Done anyways. Please review.",
      "parentUuid": "e53aa809_f30cbba2",
      "range": {
        "startLine": 1142,
        "startChar": 0,
        "endLine": 1143,
        "endChar": 58
      },
      "revId": "68ef3d3dcce78232f47841a6905d96b6418d3366",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02fd947a_5e50f0a6",
        "filename": "build.py",
        "patchSetId": 6
      },
      "lineNbr": 1550,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2019-06-10T22:34:48Z",
      "side": 1,
      "message": "In addition to removing non-necessary binaries here, we should also verify that everything in necessary_bin_files is present.  This can be done in a future CL.",
      "revId": "68ef3d3dcce78232f47841a6905d96b6418d3366",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d57c08ab_0195a104",
        "filename": "build.py",
        "patchSetId": 6
      },
      "lineNbr": 1550,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2019-06-10T22:44:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02fd947a_5e50f0a6",
      "revId": "68ef3d3dcce78232f47841a6905d96b6418d3366",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db4a4f2d_89df49e8",
        "filename": "build.py",
        "patchSetId": 6
      },
      "lineNbr": 1550,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2019-06-11T17:58:20Z",
      "side": 1,
      "message": "I added a simple loop for this anyways. Please triple check it.\n\nNote that the list contains llvm-addr2line which isn\u0027t built and LLVMgold which isn\u0027t in the bin/ dir.",
      "parentUuid": "d57c08ab_0195a104",
      "revId": "68ef3d3dcce78232f47841a6905d96b6418d3366",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29571bcd_fa97c434",
        "filename": "build.py",
        "patchSetId": 6
      },
      "lineNbr": 1550,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2019-06-11T18:11:55Z",
      "side": 1,
      "message": "Looks like windows builds also don\u0027t produce clang-9.exe (but they do produce clang.exe and clang++.exe)",
      "parentUuid": "db4a4f2d_89df49e8",
      "revId": "68ef3d3dcce78232f47841a6905d96b6418d3366",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}