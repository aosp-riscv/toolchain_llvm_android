{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dbdd6d52_8f3180f8",
        "filename": "patches/PATCHES.json",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2021-10-27T22:40:21Z",
      "side": 1,
      "message": "Do we have to accept `null` here or could these be omitted? I\u0027m not that skilled at json parsing to know if we could just make this optional somehow. This is also where my CL doing something similar got stuck, as I was trying to ensure that my change was a nop to the `PATCHES.json` file.",
      "revId": "02b6cc8244e2095faa5956c3e86ecfe9d896d45b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af7de9b0_3c834a91",
        "filename": "patches/PATCHES.json",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2021-10-27T22:44:32Z",
      "side": 1,
      "message": "This matches the existing behavior of `end_version` which is also Optional and of which a few patches in this json file have `end_version: null`.\n\nWe could change cherrypick_cl.py to omit the fields when either values are `None`/`null`, but we should be consistent IMO between these two optional fields, and there\u0027s little benefit IMO; maybe less churn over time in the PATCHES.json file, but it is autogenerated.  The current method is perhaps more consistent from a scheme perspective.\n\nThe issue you were likely hitting was that there\u0027s a bootstrapping/chicken+egg problem here; see v1 of this patch for how I solved that; but that approach isn\u0027t necessary once PATCHES.json has been updated once.",
      "parentUuid": "dbdd6d52_8f3180f8",
      "revId": "02b6cc8244e2095faa5956c3e86ecfe9d896d45b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9d6ef99_4d12af84",
        "filename": "patches/PATCHES.json",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2021-10-27T22:48:54Z",
      "side": 1,
      "message": "That\u0027s fine with me. I guess that being more explicit here also makes it more likely that someone will use this field (which is a helpful thing, tbh).",
      "parentUuid": "af7de9b0_3c834a91",
      "revId": "02b6cc8244e2095faa5956c3e86ecfe9d896d45b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74559abf_26625b61",
        "filename": "patches/PATCHES.json",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2021-10-27T23:04:50Z",
      "side": 1,
      "message": "As I think more about it, is there a better name for this field?  Sadly, \u0027comment\u0027 is already in use (and is shared with ChromeOS scripts as well), but `comment` should really be `title` or `subject`.\n\nDoes `notes` or `related_info` sound better?\n\n(If we do this, we can do it as a follow up, esp. after aosp/1871921 is merged.",
      "parentUuid": "a9d6ef99_4d12af84",
      "revId": "02b6cc8244e2095faa5956c3e86ecfe9d896d45b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95c321b6_c46489d6",
        "filename": "patches/PATCHES.json",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2021-10-27T23:08:49Z",
      "side": 1,
      "message": "@manojgupta/@gbiv: Any thoughts about renaming the existing `comment` field? I can put this on the meeting agenda for our next cross-team meeting too.",
      "parentUuid": "74559abf_26625b61",
      "revId": "02b6cc8244e2095faa5956c3e86ecfe9d896d45b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "403f473f_b9498dad",
        "filename": "patches/PATCHES.json",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1130573
      },
      "writtenOn": "2021-10-27T23:18:55Z",
      "side": 1,
      "message": "comment is just a string field. In theory, we can just append the bug information to it via a command line option rather than creating a new string field?\n\nDiscussing in meeting sgtm.",
      "parentUuid": "95c321b6_c46489d6",
      "revId": "02b6cc8244e2095faa5956c3e86ecfe9d896d45b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd6d18a5_c3b0df4f",
        "filename": "patches/PATCHES.json",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2021-10-27T23:59:37Z",
      "side": 1,
      "message": "I added that bugs_tests manually and didn\u0027t know that some scripts will not work with optional fields. It would be nice if depending scripts can be changed to really accept and preserve optional JSON fields.\nI tried to just add some comment lines with leading # or //, but Python\u0027s json reader did not like those syntax. A single string for the \"comment\" field is getting too long, so I would like a field that can hold a list of multiple strings.",
      "parentUuid": "403f473f_b9498dad",
      "revId": "02b6cc8244e2095faa5956c3e86ecfe9d896d45b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}