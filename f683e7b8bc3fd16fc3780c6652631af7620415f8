{
  "comments": [
    {
      "key": {
        "uuid": "eb3b0168_2617fee0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2020-08-20T22:42:07Z",
      "side": 1,
      "message": "\u003e Patch Set 1:\n\u003e \n\u003e \u003e Patch Set 1: Code-Review-1\n\u003e \u003e \n\u003e \u003e \u003e Patch Set 1:\n\u003e \u003e \u003e \n\u003e \u003e \u003e This may have to wait until we switch the default for the NDK over, or anyone not setting a linker will just get the current Android (non-lld) default. :(\n\u003e \u003e \n\u003e \u003e Yeah, this changes the NDK defaults. That\u0027s still a few releases out.\n\u003e \u003e \n\u003e \u003e If there\u0027s much value in doing this for the platform/kernel, we can work around this when installing Clang to the NDK by undoing it manually, but if this is just a clean up I\u0027d prefer if we wait since I\u0027d rather have as few special cases in our build as possible.\n\u003e \n\u003e I\u0027d actually tried doing this myself recently, and it seems we can\u0027t because it breaks darwin host builds. https://reviews.llvm.org/D76452 is my attempt to fix it in a way that doesn\u0027t break darwin.\n\nIt looks like something landed upstream for this. srhines@ just mentioned this in https://b.corp.google.com/issues/141693040#comment17.  Time for rereview?",
      "revId": "f683e7b8bc3fd16fc3780c6652631af7620415f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4d6f259_845c584d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2020-08-20T22:47:02Z",
      "side": 1,
      "message": "Need to check for https://reviews.llvm.org/rG53ff95254df4be3365a0bf4da2677e75ccbf32ba in latest prebuilts.",
      "parentUuid": "eb3b0168_2617fee0",
      "revId": "f683e7b8bc3fd16fc3780c6652631af7620415f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd351c6_fe260d59",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2020-08-20T23:44:06Z",
      "side": 1,
      "message": "https://reviews.llvm.org/rG53ff95254df4be3365a0bf4da2677e75ccbf32ba solve the problem blocking this change. That change just makes it so that the LLD driver mode (argument handling and whatnot) is used by default on Darwin. This change will still make Darwin host builds use LLD by default, which aiui is not a thing we can do.",
      "parentUuid": "d4d6f259_845c584d",
      "revId": "f683e7b8bc3fd16fc3780c6652631af7620415f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b04fb2f_2c01d94c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2020-08-20T23:44:06Z",
      "side": 1,
      "message": "That change fixes the case where LLD would use the ld64 driver mode on Darwin if the binary name was `ld`. That\u0027s not what\u0027s happening here, so it makes no difference to this change.\n\nChanging this config value will still make builds that Darwin builds that *target* Darwin use LLD by default, which aiui is not a thing we can do.",
      "parentUuid": "d4d6f259_845c584d",
      "revId": "f683e7b8bc3fd16fc3780c6652631af7620415f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd6593dd_17a91ed1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2020-08-20T23:54:26Z",
      "side": 1,
      "message": "The only Darwin code we support with these prebuilts is building the platform host code for Darwin.  They *seem* to use lld (I think?).  If so, wouldn\u0027t this change be safe?\n\nIf the NDK already defaults to lld, we can make this config change for Linux?  IIUC, Nick is interested in this change when building the kernel and setting this config for the Linux prebuilts would suffice for that usecase.",
      "parentUuid": "ffd351c6_fe260d59",
      "revId": "f683e7b8bc3fd16fc3780c6652631af7620415f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e675b9e_d35a3771",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2020-08-21T00:12:26Z",
      "side": 1,
      "message": "I thought it was used by other projects as well. Many of the NDK host tools use it, but we own those so we can probably fix those.\n\nCan we just have this script `cp ld.lld ld`, for Linux only (or maybe Windows too)? That way Darwin continues working as expected, the kernel gets LLD by default, and the NDK can undo the default change if it needs to.",
      "parentUuid": "bd6593dd_17a91ed1",
      "revId": "f683e7b8bc3fd16fc3780c6652631af7620415f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}