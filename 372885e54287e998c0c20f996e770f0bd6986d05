{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3a5a8e06_8bf2e5b1",
        "filename": "do_build.py",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2021-10-15T05:16:18Z",
      "side": 1,
      "message": "This probably needs to be abstracted out or it will break next time the version goes up.",
      "range": {
        "startLine": 210,
        "startChar": 25,
        "endLine": 210,
        "endChar": 29
      },
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f82d91f_1fffad08",
        "filename": "do_build.py",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2021-10-15T17:17:03Z",
      "side": 1,
      "message": "This is not tied to LLVM\u0027s major revision.  Since libclang\u0027s interface is supposed to be stable, its version is fixed to 13 until the next ABI-breaking change: https://github.com/llvm/llvm-project/blob/ccbfcfda1e21f95498ec9b00504b929fcc297a13/clang/tools/libclang/CMakeLists.txt#L1.\n\nThis line will fail when such a change happens, though.  But we should avoid these \"accepted\" manual interventions if we are going to increase the cadence of updates.  Currently, the install dir has:\n\u003e libclang.so            libclang.so.13         libclang.so.14.0.4git\n\nWe can search for `libclang.so.[0-9]+` to infer this version rather than hardcoding it.",
      "parentUuid": "3a5a8e06_8bf2e5b1",
      "range": {
        "startLine": 210,
        "startChar": 25,
        "endLine": 210,
        "endChar": 29
      },
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fe723c4_968f7263",
        "filename": "do_build.py",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2021-10-19T19:09:44Z",
      "side": 1,
      "message": "Let\u0027s defer this to a follow-up change.",
      "parentUuid": "9f82d91f_1fffad08",
      "range": {
        "startLine": 210,
        "startChar": 25,
        "endLine": 210,
        "endChar": 29
      },
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "828b1bdc_104463ab",
        "filename": "patches/Fix-Android-libunwind-link-error.patch",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2021-10-15T05:16:18Z",
      "side": 1,
      "message": "I feel like this still needs a better resolution here, because stderr just isn\u0027t present because of target API levels with bionic/NDK again. This time, stderr doesn\u0027t appear until API level 23, and is just a macro before that.",
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e4e8bf2_dc04f324",
        "filename": "patches/Fix-Android-libunwind-link-error.patch",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2021-10-15T05:51:00Z",
      "side": 1,
      "message": "Pirama, I copied this from your earlier patches.\nDo you have other solutions?",
      "parentUuid": "828b1bdc_104463ab",
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c7c007e_d7551f71",
        "filename": "patches/Fix-Android-libunwind-link-error.patch",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2021-10-15T17:06:44Z",
      "side": 1,
      "message": "Hmm, I didn\u0027t see the definition for API \u003c 23.  If we always have stderr available, not sure why it errors out.  What error do you get?  Are we using libunwind.a in a link step that doesn\u0027t have `-lc`?",
      "parentUuid": "5e4e8bf2_dc04f324",
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f70bb3ee_7da2a768",
        "filename": "patches/Fix-Android-libunwind-link-error.patch",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2021-10-15T22:52:46Z",
      "side": 1,
      "message": "FAILED: lib/linux/libclang_rt.ubsan_standalone-arm-android.so\nI added more info in b/203004257",
      "parentUuid": "6c7c007e_d7551f71",
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c984b1d3_44b310e7",
        "filename": "patches/Fix-Android-libunwind-link-error.patch",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2021-10-18T20:29:35Z",
      "side": 1,
      "message": "Replaced this patch with Pirama\u0027s new changes.",
      "parentUuid": "f70bb3ee_7da2a768",
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60cbe6a9_02ee3032",
        "filename": "patches/Fix-kmp_barrier.h-undeclared-KMP_INTERNAL-MALLOC-err.patch",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2021-10-15T05:16:18Z",
      "side": 1,
      "message": "Is this patch still needed with the API bump to 19?",
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c177e39_3076bfb0",
        "filename": "patches/Fix-kmp_barrier.h-undeclared-KMP_INTERNAL-MALLOC-err.patch",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2021-10-15T05:51:00Z",
      "side": 1,
      "message": "Yes, we still get the undefined error without this patch.\nNow even PS5 has Pirama\u0027s c/1858465, we still need this patch.",
      "parentUuid": "60cbe6a9_02ee3032",
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d60c5c01_3030912c",
        "filename": "patches/Fix-kmp_barrier.h-undeclared-KMP_INTERNAL-MALLOC-err.patch",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2021-10-15T17:06:44Z",
      "side": 1,
      "message": "Is it the same error as before?  In https://github.com/llvm/llvm-project/blob/ff4c98c05559e498300bd3ad55272ac2a8d10dbc/openmp/runtime/src/kmp_barrier.h#L19, I\u0027d expect `KMP_HAVE_POSIX_MEMALIGN` to be defined when we move to API level 19.",
      "parentUuid": "3c177e39_3076bfb0",
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "887afe70_eae0650f",
        "filename": "patches/Fix-kmp_barrier.h-undeclared-KMP_INTERNAL-MALLOC-err.patch",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2021-10-15T22:52:46Z",
      "side": 1,
      "message": "The error was as before at line 43, not 19. My old patch at line 19 was just to simplify the macro test conditions and use malloc/free for Android.\nWithout that or Pirama\u0027s new patch, we still get the following error:\n\nIn file included from .../out/llvm-project/openmp/runtime/src/kmp_ftn_cdecl.cpp:13:\nIn file included from .../out/llvm-project/openmp/runtime/src/kmp.h:118:\n.../out/llvm-project/openmp/runtime/src/kmp_barrier.h:111:51: error: use of undeclared identifier \u0027KMP_INTERNAL_MALLOC\u0027\n    distributedBarrier *d \u003d (distributedBarrier *)KMP_ALIGNED_ALLOCATE(\n                                                  ^\n.../out/llvm-project/openmp/runtime/src/kmp_barrier.h:43:47: note: expanded from macro \u0027KMP_ALIGNED_ALLOCATE\u0027\n#define KMP_ALIGNED_ALLOCATE(size, alignment) KMP_INTERNAL_MALLOC(size)\n                                              ^\n.../out/llvm-project/openmp/runtime/src/kmp_barrier.h:131:52: error: use of undeclared identifier \u0027KMP_INTERNAL_FREE\u0027\n  static void deallocate(distributedBarrier *db) { KMP_ALIGNED_FREE(db); }\n                                                   ^\n.../out/llvm-project/openmp/runtime/src/kmp_barrier.h:44:31: note: expanded from macro \u0027KMP_ALIGNED_FREE\u0027\n#define KMP_ALIGNED_FREE(ptr) KMP_INTERNAL_FREE(ptr)\n                              ^\n2 errors generated.",
      "parentUuid": "d60c5c01_3030912c",
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34e5b246_9afc486f",
        "filename": "patches/Fix-kmp_barrier.h-undeclared-KMP_INTERNAL-MALLOC-err.patch",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2021-10-18T20:30:22Z",
      "side": 1,
      "message": "Replaced this patch with Pirama\u0027s new changes.",
      "parentUuid": "887afe70_eae0650f",
      "revId": "372885e54287e998c0c20f996e770f0bd6986d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}