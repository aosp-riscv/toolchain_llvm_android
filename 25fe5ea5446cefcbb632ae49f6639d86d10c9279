{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "94399fb5_3e921f2b",
        "filename": "test/scripts/gerrit.py",
        "patchSetId": 1
      },
      "lineNbr": 382,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2020-11-16T19:21:54Z",
      "side": 1,
      "message": "Do we want to handle failure to match here?",
      "revId": "25fe5ea5446cefcbb632ae49f6639d86d10c9279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b065a856_a1a2eb99",
        "filename": "test/scripts/gerrit.py",
        "patchSetId": 1
      },
      "lineNbr": 382,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2020-11-17T00:52:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94399fb5_3e921f2b",
      "revId": "25fe5ea5446cefcbb632ae49f6639d86d10c9279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82653d40_abeafa25",
        "filename": "test/scripts/test_configs.yaml",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2020-11-16T19:21:54Z",
      "side": 1,
      "message": "this is 32b x86, which is our lease supported platform. Can we use kernel_aarch64 instead?",
      "revId": "25fe5ea5446cefcbb632ae49f6639d86d10c9279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1cca460e_783439cf",
        "filename": "test/scripts/test_configs.yaml",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2020-11-17T00:52:37Z",
      "side": 1,
      "message": "Done.  I\u0027ll add all targets from this branch in a followup this week (since each build takes just a few minutes to run).",
      "parentUuid": "82653d40_abeafa25",
      "revId": "25fe5ea5446cefcbb632ae49f6639d86d10c9279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "917f277e_839c5d9e",
        "filename": "test/scripts/test_prebuilts.py",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2020-11-16T19:21:54Z",
      "side": 1,
      "message": "Does the call on L221 also need the same guard on `if cl_number`?",
      "range": {
        "startLine": 228,
        "startChar": 8,
        "endLine": 229,
        "endChar": 63
      },
      "revId": "25fe5ea5446cefcbb632ae49f6639d86d10c9279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c41ad671_2b149f3e",
        "filename": "test/scripts/test_prebuilts.py",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2020-11-17T00:52:37Z",
      "side": 1,
      "message": "KernelCLs.getCL() does the None check.",
      "parentUuid": "917f277e_839c5d9e",
      "range": {
        "startLine": 228,
        "startChar": 8,
        "endLine": 229,
        "endChar": 63
      },
      "revId": "25fe5ea5446cefcbb632ae49f6639d86d10c9279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}